@inject ISnackbar Snackbar
@using InstaPrep.Data.Scrapers;
@inject InstaPrep.Data.IDataService DataService
@inject NavigationManager NavManager

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Receipt" Class="mr-3 mb-n1" />
            Import Recipe
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="@urlToImport" Label="URL to Import" ReadOnly="false" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Surface" OnClick="ImportRecipe">Import Recipe</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    private string urlToImport { get; set; } = string.Empty;

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void ImportRecipe()
    {

        var test = urlToImport;
        var recipe = new RecipeScraperBuilder(urlToImport).Result;

        // Add recipe to database
        recipe = DataService.AddRecipe(recipe);

        //In a real world scenario this bool would probably be a service to delete the item from api/database
        Snackbar.Add("Recipe Added!", Severity.Success);
        MudDialog.Close(DialogResult.Ok(""));

        NavManager.NavigateTo("/recipe/" + recipe.Id);

    }

}

